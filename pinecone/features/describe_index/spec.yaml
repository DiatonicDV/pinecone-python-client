/indexes/{index_name}:
        get:
            operationId: describe_index
            summary: 'Describe an index'
            description: Get a description of an index.
            parameters:
                - name: index_name
                  required: true
                  in: path
                  description: The name of the index to be described.
                  example: 'test-index'
                  schema:
                    type: string
            responses:
                '200':
                    description: Configuration information and deployment status of the index.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: >-
                                    The IndexModel describes the configuration and status of a Pinecone index.
                                required:
                                    - name
                                    - dimension
                                    - metric
                                    - status
                                    - spec
                                    - host
                                properties:
                                    name:
                                        type: string
                                        minLength: 1
                                        maxLength: 45
                                        description: >
                                            The name of the index. Resource name must be 1-45 characters long, start and end with an alphanumeric character, and consist only of lower case alphanumeric characters or '-'.

                                        example: example-index
                                    dimension:
                                        type: integer
                                        description: The dimensions of the vectors to be inserted in the index.
                                        minimum: 1
                                        maximum: 20000
                                        example: 1536
                                        format: int32
                                    metric:
                                        type: string
                                        description: >-
                                            The distance metric to be used for similarity search. You can use 'euclidean', 'cosine', or 'dotproduct'.
                                        enum:
                                            - cosine
                                            - euclidean
                                            - dotproduct
                                        default: cosine
                                    host:
                                        type: string
                                        description: >-
                                            The URL address where the index is hosted.
                                        example: 'semantic-search-c01b5b5.svc.us-west1-gcp.pinecone.io'
                                    spec:
                                        type: object
                                        properties:
                                            pod:
                                                type: object
                                                description: Configuration needed to deploy a pod-based index.
                                                required:
                                                    - environment
                                                    - pods
                                                    - replicas
                                                    - shards
                                                    - pod_type
                                                example:
                                                    environment: 'us-east1-gcp'
                                                    replicas: 1
                                                    shards: 1
                                                    pod_type: 'p1.x1'
                                                    pods: 1
                                                    metadata_config:
                                                        indexed:
                                                            - 'genre'
                                                            - 'title'
                                                            - 'imdb_rating'
                                                    source_collection: 'movie-embeddings'
                                                properties:
                                                    environment:
                                                        type: string
                                                        description: >-
                                                            The environment where the index is hosted.
                                                        example: 'us-east1-gcp'
                                                    replicas:
                                                        type: integer
                                                        format: int32
                                                        description: >-
                                                            The number of replicas. Replicas duplicate your index. They provide higher availability and throughput. Replicas can be scaled up or down as your needs change.
                                                        default: 1
                                                        minimum: 1
                                                    shards:
                                                        type: integer
                                                        format: int32
                                                        description: >-
                                                            The number of shards. Shards split your data across multiple pods so you can fit more data into an index.
                                                        default: 1
                                                        minimum: 1
                                                    pod_type:
                                                        type: string
                                                        description: >-
                                                            The type of pod to use. One of `s1`, `p1`, or `p2` appended with `.` and one of `x1`, `x2`, `x4`, or `x8`.
                                                        default: p1.x1
                                                    pods:
                                                        type: integer
                                                        description: >-
                                                            The number of pods to be used in the index. This should be equal to `shards` x `replicas`.'
                                                        default: 1
                                                        example: 1
                                                        minimum: 1
                                                    metadata_config:
                                                        type: object
                                                        description: >-
                                                            Configuration for the behavior of Pinecone's internal metadata index. By default, all metadata is indexed; when `metadata_config` is present, only specified metadata fields are indexed. These configurations are only valid for use with pod-based indexes.
                                                        properties:
                                                            indexed:
                                                                type: array
                                                                description: >-
                                                                    By default, all metadata is indexed; to change this behavior, use this property to specify an array of metadata fields that should be indexed.
                                                                items:
                                                                    type: string
                                                        example:
                                                            indexed:
                                                                - 'genre'
                                                                - 'title'
                                                                - 'imdb_rating'
                                                    source_collection:
                                                        type: string
                                                        description: >-
                                                            The name of the collection to be used as the source for the index.
                                                        example: 'movie-embeddings'
                                            serverless:
                                                type: object
                                                required:
                                                    - cloud
                                                    - region
                                                description: Configuration needed to deploy a serverless index.
                                                properties:
                                                    cloud:
                                                        type: string
                                                        enum:
                                                            - gcp
                                                            - aws
                                                            - azure
                                                        description: >-
                                                            The public cloud where you would like your index hosted. Serverless indexes can be hosted only in AWS at this time.
                                                        example: aws
                                                    region:
                                                        type: string
                                                        description: >-
                                                            The region where you would like your index to be created.  Serverless indexes can be created only in the us-west-2 and us-east-1 regions of AWS at this time.
                                                        example: us-east-1
                                        example:
                                            pod:
                                                environment: 'us-east-1-aws'
                                                replicas: 1
                                                shards: 1
                                                pod_type: 'p1.x1'
                                                pods: 1
                                                metadata_config:
                                                    indexed:
                                                        - 'genre'
                                                        - 'title'
                                                        - 'imdb_rating'
                                    status:
                                        type: object
                                        required:
                                            - ready
                                            - state
                                        example:
                                            ready: true
                                            state: 'ScalingUpPodSize'
                                        properties:
                                            ready:
                                                type: boolean
                                            state:
                                                type: string
                                                enum:
                                                    - Initializing
                                                    - InitializationFailed
                                                    - ScalingUp
                                                    - ScalingDown
                                                    - ScalingUpPodSize
                                                    - ScalingDownPodSize
                                                    - Terminating
                                                    - Ready
                            examples:
                                movie-recommendations-serverless:
                                    summary: A serverless index
                                    value:
                                        name: 'movie-recommendations'
                                        dimension: 1536
                                        metric: 'cosine'
                                        host: 'movie-recommendations-c01b5b5.svc.us-east1-gcp.pinecone.io'
                                        status:
                                            ready: false
                                            state: 'Initializing'
                                        spec:
                                            serverless:
                                                cloud: 'aws'
                                                region: 'us-east-1'
                                movie-recommendations-pod:
                                    summary: A pod-based index
                                    value:
                                        name: 'movie-recommendations'
                                        dimension: 1536
                                        metric: 'cosine'
                                        host: 'movie-recommendations-c01b5b5.svc.us-east1-gcp.pinecone.io'
                                        status:
                                            ready: false
                                            state: 'Initializing'
                                        spec:
                                            pod:
                                                environment: 'us-east-1-aws'
                                                replicas: 1
                                                shards: 1
                                                pod_type: 'p1.x1'
                                                pods: 1
                                                metadata_config:
                                                    indexed:
                                                        - 'genre'
                                                        - 'title'
                                                        - 'imdb_rating'
                    links:
                        UpsertVector:
                            operationId: upsert
                            server:
                                url: $response.body#/host
                        UpdateVector:
                            operationId: update
                            server:
                                url: $response.body#/host
                        QueryVector:
                            operationId: query
                            server:
                                url: $response.body#/host
                        FetchVector:
                            operationId: fetch
                            server:
                                url: $response.body#/host
                        DeleteOneVector:
                            operationId: delete1
                            server:
                                url: $response.body#/host
                        DeleteVector:
                            operationId: delete
                            server:
                                url: $response.body#/host
                '401':
                    description: 'Unauthorized. Possible causes: Invalid API key.'
                    content:
                        application/json:
                            schema:
                                type: object
                                description: The response shape used for all error responses.
                                required:
                                    - status
                                    - error
                                properties:
                                    status:
                                        type: integer
                                        description: The HTTP status code of the error.
                                        example: 500
                                    error:
                                        type: object
                                        description: Detailed information about the error that occurred.
                                        required:
                                            - code
                                            - message
                                        properties:
                                            code:
                                                type: string
                                                enum:
                                                    - OK
                                                    - UNKNOWN
                                                    - INVALID_ARGUMENT
                                                    - DEADLINE_EXCEEDED
                                                    - QUOTA_EXCEEDED
                                                    - NOT_FOUND
                                                    - ALREADY_EXISTS
                                                    - PERMISSION_DENIED
                                                    - UNAUTHENTICATED
                                                    - RESOURCE_EXHAUSTED
                                                    - FAILED_PRECONDITION
                                                    - ABORTED
                                                    - OUT_OF_RANGE
                                                    - UNIMPLEMENTED
                                                    - INTERNAL
                                                    - UNAVAILABLE
                                                    - DATA_LOSS
                                                    - FORBIDDEN
                                            message:
                                                type: string
                                                example: Index name must contain only lowercase alphanumeric characters or hyphens, and must not begin or end with a hyphen.
                                            details:
                                                description: >-
                                                    Additional information about the error. This field is not guaranteed to be present.
                                                type: object
                                        example:
                                            code: 'INVALID_ARGUMENT'
                                            message: 'Index name must contain only lowercase alphanumeric characters or hyphens, and must not begin or end with a hyphen.'
                                example:
                                    status: 429
                                    error:
                                        code: 'QUOTA_EXCEEDED'
                                        message: 'The index exceeds the project quota of 5 pods by 2 pods. Upgrade your account or change the project settings to increase the quota.'
                            examples:
                                unauthorized:
                                    summary: 'Unauthorized'
                                    value:
                                        status: 401
                                        error:
                                            code: 'UNAUTHENTICATED'
                                            message: 'Invalid API key.'
                '404':
                    description: Index not found.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: The response shape used for all error responses.
                                required:
                                    - status
                                    - error
                                properties:
                                    status:
                                        type: integer
                                        description: The HTTP status code of the error.
                                        example: 500
                                    error:
                                        type: object
                                        description: Detailed information about the error that occurred.
                                        required:
                                            - code
                                            - message
                                        properties:
                                            code:
                                                type: string
                                                enum:
                                                    - OK
                                                    - UNKNOWN
                                                    - INVALID_ARGUMENT
                                                    - DEADLINE_EXCEEDED
                                                    - QUOTA_EXCEEDED
                                                    - NOT_FOUND
                                                    - ALREADY_EXISTS
                                                    - PERMISSION_DENIED
                                                    - UNAUTHENTICATED
                                                    - RESOURCE_EXHAUSTED
                                                    - FAILED_PRECONDITION
                                                    - ABORTED
                                                    - OUT_OF_RANGE
                                                    - UNIMPLEMENTED
                                                    - INTERNAL
                                                    - UNAVAILABLE
                                                    - DATA_LOSS
                                                    - FORBIDDEN
                                            message:
                                                type: string
                                                example: Index name must contain only lowercase alphanumeric characters or hyphens, and must not begin or end with a hyphen.
                                            details:
                                                description: >-
                                                    Additional information about the error. This field is not guaranteed to be present.
                                                type: object
                                        example:
                                            code: 'INVALID_ARGUMENT'
                                            message: 'Index name must contain only lowercase alphanumeric characters or hyphens, and must not begin or end with a hyphen.'
                                example:
                                    status: 429
                                    error:
                                        code: 'QUOTA_EXCEEDED'
                                        message: 'The index exceeds the project quota of 5 pods by 2 pods. Upgrade your account or change the project settings to increase the quota.'
                            examples:
                                index-not-found:
                                    summary: 'Index not found'
                                    value:
                                        status: 404
                                        error:
                                            code: 'NOT_FOUND'
                                            message: 'Index example-index not found.'
                '500':
                    description: Internal server error.
                    content:
                        application/json:
                            schema:
                                type: object
                                description: The response shape used for all error responses.
                                required:
                                    - status
                                    - error
                                properties:
                                    status:
                                        type: integer
                                        description: The HTTP status code of the error.
                                        example: 500
                                    error:
                                        type: object
                                        description: Detailed information about the error that occurred.
                                        required:
                                            - code
                                            - message
                                        properties:
                                            code:
                                                type: string
                                                enum:
                                                    - OK
                                                    - UNKNOWN
                                                    - INVALID_ARGUMENT
                                                    - DEADLINE_EXCEEDED
                                                    - QUOTA_EXCEEDED
                                                    - NOT_FOUND
                                                    - ALREADY_EXISTS
                                                    - PERMISSION_DENIED
                                                    - UNAUTHENTICATED
                                                    - RESOURCE_EXHAUSTED
                                                    - FAILED_PRECONDITION
                                                    - ABORTED
                                                    - OUT_OF_RANGE
                                                    - UNIMPLEMENTED
                                                    - INTERNAL
                                                    - UNAVAILABLE
                                                    - DATA_LOSS
                                                    - FORBIDDEN
                                            message:
                                                type: string
                                                example: Index name must contain only lowercase alphanumeric characters or hyphens, and must not begin or end with a hyphen.
                                            details:
                                                description: >-
                                                    Additional information about the error. This field is not guaranteed to be present.
                                                type: object
                                        example:
                                            code: 'INVALID_ARGUMENT'
                                            message: 'Index name must contain only lowercase alphanumeric characters or hyphens, and must not begin or end with a hyphen.'
                                example:
                                    status: 429
                                    error:
                                        code: 'QUOTA_EXCEEDED'
                                        message: 'The index exceeds the project quota of 5 pods by 2 pods. Upgrade your account or change the project settings to increase the quota.'
                            examples:
                                internal-server-error:
                                    summary: 'Internal server error'
                                    value:
                                        status: 500
                                        error:
                                            code: 'UNKNOWN'
                                            message: 'Internal server error'
            tags:
                - Manage Indexes