.. Code for generating multivariate graph
    import seaborn as sns
    import matplotlib as mpl
    import matplotlib.pyplot as plt
    import pandas as pd
    import numpy as np
    from collections import Counter

    mpl.rcdefaults()
    mpl.rcParams['figure.dpi'] = 150
    sns.set_theme(style="white")
    # Let's use our own colors to make things pretty...
    pink  = (206/255,   0/255,  65/255)
    blue  = (  0/255,   0/255, 163/255)
    green = ( 24/255, 187/255, 169/255)

    sample_size = 1000
    dim = 10
    A_mean = 0
    B_mean = 2

    # Create multivariate normal samples
    A_vectors = A_mean + np.random.randn(sample_size, dim)
    B_vectors = B_mean + np.random.randn(sample_size, dim)

    # Query data generated from A distribution
    query_size = 100
    A_queries = A_mean + np.random.randn(query_size, dim)

    # Plot
    df = pd.concat([
        pd.DataFrame(dict(D1=A_vectors[:, 0], D2=A_vectors[:, 1], cluster='A')), 
        pd.DataFrame(dict(D1=B_vectors[:, 0], D2=B_vectors[:, 1], cluster='B')),
        pd.DataFrame(dict(D1=A_queries[:, 0], D2=A_queries[:, 1], cluster='Queries')),
    ])

    fig, ax = plt.subplots(figsize=(8, 4))
    ax.tick_params(labelsize=10)
    ax.xaxis.label.set_size(12)
    ax.yaxis.label.set_size(12)
    sns.scatterplot(data=df, x="D1", y="D2", hue="cluster", palette=[green, pink, blue], s=10, ax=ax)
    ax.legend(title="cluster", loc='upper left', borderpad=0.2, fancybox=False, framealpha=0.5)
    plt.tight_layout()
    plt.box(on=None)
    plt.savefig('multivar.png', transparent=True, dpi=80)

.. image:: /_static/img/multivar.png
  :width: 600
  :alt: Multivariate normals