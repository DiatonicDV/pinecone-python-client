name: Pypi

on:
  workflow_dispatch:
    inputs:
      releaseLevel:
        description: 'Release level'
        required: true
        type: choice
        default: 'patch'
        options:
          - 'patch' # bug fixes
          - 'minor' # new features, backwards compatible
          - 'major' # breaking changes

env:
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}

jobs:

  pypi:
    timeout-minutes: 30
    name: pypi
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0 # Need full history and tags to compute list of commits in release

    - name: Set up Git
      run: |
        git config --global user.name "Pinecone CI"
        git config --global user.email "clients@pinecone.io"

    - name: Bump version
      id: bump
      run: |
        echo "PREVIOUS_VERSION=$(cat pinecone/__version__)" >> "$GITHUB_OUTPUT"
        echo "PREVIOUS_VERSION_TAG=v$(cat pinecone/__version__)" >> "$GITHUB_OUTPUT"
        pip install bump2version
        bump2version --current-version $(cat pinecone/__version__) ${{ github.event.inputs.releaseLevel }} pinecone/__version__
        echo "VERSION=$(cat pinecone/__version__)" >> "$GITHUB_OUTPUT"
        echo "VERSION_TAG=v$(cat pinecone/__version__)" >> "$GITHUB_OUTPUT"

    - name: Commit and tag version bump
      id: tag_release
      run: |
        git add setup.cfg pinecone/__version__
        newVersionTag="${{ steps.bump.outputs.VERSION_TAG }}"
        git commit -m "Bump version to $newVersion"
        git tag -a $newVersionTag -m "Release $newVersionTag"

    - uses: actions/setup-python@v1
      with:
        python-version: 3.x

    - name: Set Python client production environment
      run: make set-production

    - name: Build Python client
      run: make package

    # - name: Upload Python client to Pypi
    #   run: make upload PYPI_PASSWORD=${{ env.PYPI_PASSWORD }}

    # - name: Push changes and tags
    #   run: |
    #     git push --tags

    - name: Get change list
      id: list_changes
      run: |
        EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
        echo "COMMIT_LOG<<$EOF" >> "$GITHUB_ENV"
        commits=$(git log --pretty=format:'- [[%h](https://github.com/pinecone-io/pinecone-python-client/commit/%h)] %s' ${{ steps.bump.outputs.PREVIOUS_VERSION_TAG }}..${{ steps.bump.outputs.VERSION_TAG }}~1) >> "$GITHUB_OUTPUT"
        echo "$EOF" >> "$GITHUB_ENV"

    - name:  Show changes
      run:
        echo "${{ steps.list_changes.outputs.COMMIT_LOG }}"
    
    - name: Create Release Draft
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag_release.outputs.VERSION_TAG }}
        release_name: Release ${{ steps.bump.outputs.VERSION_TAG }}
        draft: true
        body: |
          ## Commits included in this release:
            
          ${{ steps.list_changes.outputs.COMMIT_LOG }}